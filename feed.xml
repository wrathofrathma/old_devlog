<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://www.kyso.dev/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.kyso.dev/" rel="alternate" type="text/html" /><updated>2021-06-18T14:43:49-05:00</updated><id>https://www.kyso.dev/feed.xml</id><title type="html">Rathma’s Devlog</title><subtitle>A blog about stuff I find interesting.</subtitle><entry><title type="html">Exploring REST APIs with Express.js (6/X): ORMs with Sequelize</title><link href="https://www.kyso.dev/express/webdev/2021/04/03/ORM-Sequelize.html" rel="alternate" type="text/html" title="Exploring REST APIs with Express.js (6/X): ORMs with Sequelize" /><published>2021-04-03T00:00:00-05:00</published><updated>2021-04-03T00:00:00-05:00</updated><id>https://www.kyso.dev/express/webdev/2021/04/03/ORM-Sequelize</id><author><name></name></author><category term="express" /><category term="webdev" /><summary type="html">Overview We’ve already completed building the API, so now it’s just about making life easier. Instead of using our user-built models &amp;amp; migrations, we can use a full fledged ORM package like sequelize to handle our database.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/sequelize.png" /><media:content medium="image" url="https://www.kyso.dev/images/sequelize.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Exploring REST APIs with Express.js (5/X): Route controllers, Services, express error handling, basic authentication, and auth middleware</title><link href="https://www.kyso.dev/express/webdev/2021/03/31/Controllers.html" rel="alternate" type="text/html" title="Exploring REST APIs with Express.js (5/X): Route controllers, Services, express error handling, basic authentication, and auth middleware" /><published>2021-03-31T00:00:00-05:00</published><updated>2021-03-31T00:00:00-05:00</updated><id>https://www.kyso.dev/express/webdev/2021/03/31/Controllers</id><author><name></name></author><category term="express" /><category term="webdev" /><summary type="html">Overview Now that most of the foundation is laid, we can finally start building out endpoint to the outside world. This process will involve building route controllers, a service layer between the models and controllers, more useful errors, setting up basic authentication, and adding auth middleware. So this post will be a bit longer than the others.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/express.png" /><media:content medium="image" url="https://www.kyso.dev/images/express.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Exploring REST APIs with Express.js (4/X): Database abstraction and error handling</title><link href="https://www.kyso.dev/express/webdev/sqlite/2021/03/29/Database-Abstraction.html" rel="alternate" type="text/html" title="Exploring REST APIs with Express.js (4/X): Database abstraction and error handling" /><published>2021-03-29T00:00:00-05:00</published><updated>2021-03-29T00:00:00-05:00</updated><id>https://www.kyso.dev/express/webdev/sqlite/2021/03/29/Database-Abstraction</id><author><name></name></author><category term="express" /><category term="webdev" /><category term="sqlite" /><summary type="html">Overview So I was considering what I wanted to do next and I think the short term roadmap for a functional REST API is realistically to handle routing, functions to handle the requests, authentication, and error handling. However, before we do any of that, it’d be nice to abstract our database interactions. This would allow us to perform unit tests on specific actions, as well as prevent us from rewriting the same code over and over.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/express.png" /><media:content medium="image" url="https://www.kyso.dev/images/express.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Exploring REST APIs with Express.js (3/X): Unit Testing</title><link href="https://www.kyso.dev/express/webdev/jest/unit%20test/sqlite/2021/03/25/Unit-Testing.html" rel="alternate" type="text/html" title="Exploring REST APIs with Express.js (3/X): Unit Testing" /><published>2021-03-25T00:00:00-05:00</published><updated>2021-03-25T00:00:00-05:00</updated><id>https://www.kyso.dev/express/webdev/jest/unit%20test/sqlite/2021/03/25/Unit%20-Testing</id><author><name></name></author><category term="express" /><category term="webdev" /><category term="jest" /><category term="unit test" /><category term="sqlite" /><summary type="html">Overview In this post I’ll be learning unit testing with the Jest framework by testing the database we built in the previous post: Sqlite-Database.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/express.png" /><media:content medium="image" url="https://www.kyso.dev/images/express.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Exploring REST APIs with Express.js (2/X): Sqlite Database</title><link href="https://www.kyso.dev/express/webdev/sqlite/migrations/2021/03/23/Sqlite-Database.html" rel="alternate" type="text/html" title="Exploring REST APIs with Express.js (2/X): Sqlite Database" /><published>2021-03-23T00:00:00-05:00</published><updated>2021-03-23T00:00:00-05:00</updated><id>https://www.kyso.dev/express/webdev/sqlite/migrations/2021/03/23/Sqlite-Database</id><author><name></name></author><category term="express" /><category term="webdev" /><category term="sqlite" /><category term="migrations" /><summary type="html">Overview In this post we’ll be implementing a basic SQLite database to contain our user data and tweets, adding async support to our database, and using basic migration scripts to setup our database.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/express.png" /><media:content medium="image" url="https://www.kyso.dev/images/express.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Exploring REST APIs with Express.js (1/X): Express Scaffolding</title><link href="https://www.kyso.dev/express/webdev/es6/2021/03/22/Express-Scaffolding.html" rel="alternate" type="text/html" title="Exploring REST APIs with Express.js (1/X): Express Scaffolding" /><published>2021-03-22T00:00:00-05:00</published><updated>2021-03-22T00:00:00-05:00</updated><id>https://www.kyso.dev/express/webdev/es6/2021/03/22/Express-Scaffolding</id><author><name></name></author><category term="express" /><category term="webdev" /><category term="es6" /><summary type="html">Overview In the project 2 description post I set a goal to learn Express.js by implementing some of the basic functionality I enjoyed from Adonis.js.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/express.png" /><media:content medium="image" url="https://www.kyso.dev/images/express.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Hosting an Express.js server on Firebase functions</title><link href="https://www.kyso.dev/express/firebase/webdev/2021/03/16/FirebaseExpress.html" rel="alternate" type="text/html" title="Hosting an Express.js server on Firebase functions" /><published>2021-03-16T00:00:00-05:00</published><updated>2021-03-16T00:00:00-05:00</updated><id>https://www.kyso.dev/express/firebase/webdev/2021/03/16/FirebaseExpress</id><author><name></name></author><category term="express" /><category term="firebase" /><category term="webdev" /><summary type="html">Overview For my next few projects I knew I was planning on learning express.js, but hosting was a concern in my mind. I definitely wanted a place to host my progress for cheap. I was thinking of renting a VPS from ovh, which I might still do, but I found out a few days ago that it’s possible to host express.js servers on firebase using their “functions”.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/firebase.jpg" /><media:content medium="image" url="https://www.kyso.dev/images/firebase.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Project 2 - Twitter Clone</title><link href="https://www.kyso.dev/webdev/twitter/project%202/2021/03/15/twitter.html" rel="alternate" type="text/html" title="Project 2 - Twitter Clone" /><published>2021-03-15T00:00:00-05:00</published><updated>2021-03-15T00:00:00-05:00</updated><id>https://www.kyso.dev/webdev/twitter/project%202/2021/03/15/twitter</id><author><name></name></author><category term="webdev" /><category term="twitter" /><category term="project 2" /><summary type="html">Overview So much like the first project, I’m going into this one with a list of things I’d like to learn. I don’t want to expand the scope of the frontend too much just yet since we’re completely switching backends. So let’s define some goals.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/twitter.png" /><media:content medium="image" url="https://www.kyso.dev/images/twitter.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Building a CRUD TODO with Vue 3.0 &amp;amp; Adonis.js</title><link href="https://www.kyso.dev/vue/primevue/webdev/2021/03/15/FirstCrudTODO.html" rel="alternate" type="text/html" title="Building a CRUD TODO with Vue 3.0 &amp;amp; Adonis.js" /><published>2021-03-15T00:00:00-05:00</published><updated>2021-03-15T00:00:00-05:00</updated><id>https://www.kyso.dev/vue/primevue/webdev/2021/03/15/FirstCrudTODO</id><author><name></name></author><category term="vue" /><category term="primevue" /><category term="webdev" /><summary type="html">Overview So this is my first real attempt at learning web development. I played around with it about a year ago and have certainly used a handful of microframeworks with python for a variety of projects, but I’ve never really committed to learning frontend or even proper backend. This time we’re committed.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/vue.png" /><media:content medium="image" url="https://www.kyso.dev/images/vue.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">About this blog</title><link href="https://www.kyso.dev/meta/2021/03/14/About.html" rel="alternate" type="text/html" title="About this blog" /><published>2021-03-14T00:00:00-06:00</published><updated>2021-03-14T00:00:00-06:00</updated><id>https://www.kyso.dev/meta/2021/03/14/About</id><author><name></name></author><category term="meta" /><summary type="html">What is this all about? Hmm, I initially started this blog because I was studying machine learning and was somewhat fascinated by the ability to do literate programming using jupyter notebooks. A concept I had only ever really encountered in emacs’ org mode. After seeing how well jupyter notebooks worked, I wanted to share my journey in ML with friends, aggregate resources to one spot, and teach people stuff eventually…butttttt then I needed a job and that dream more or less died.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.kyso.dev/images/logo.png" /><media:content medium="image" url="https://www.kyso.dev/images/logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>